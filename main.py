import logging
import time
from typing import Any
import telebot
from dotenv import load_dotenv
from telebot import types
from config import TOKEN2, WEATHER_TOKEN
from db_funcs import db_user_save, select_all_users_id
from weather_tomorrow import get_api_tomorrow, get_tomorrow_weather
from current_weather import get_api_answer, get_location, get_weather
from three_days_weather import get_api_three_days, get_three_days_weather
# import os


load_dotenv()
# TOKEN = os.getenv('TOKEN')
# WEATHER_TOKEN = os.getenv('WEATHER_TOKEN')
TOKEN = TOKEN2
bot = telebot.TeleBot(TOKEN)
WEATHER_TOKEN = WEATHER_TOKEN
bot = telebot.TeleBot(TOKEN)
logging.basicConfig(
    level=logging.INFO,
    filename='main.log',
    filemode='a',
    format='%(asctime)s, %(levelname)s, %(message)s, %(name)s'
)


@bot.message_handler(commands=['start'])
def start(message: Any) -> None:
    '''–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ —é–∑–µ—Ä –≤–∫–ª—é—á–∞–µ—Ç –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º.
    '''
    # markup = types.InlineKeyboardMarkup(row_width=2)
    # item = types.InlineKeyboardButton(
    # '–ü–æ–≥–æ–¥–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞',
    # callback_data='weather_tomorrow')
    # item2 = types.InlineKeyboardButton(
    # '–ü–æ–≥–æ–¥–∞ –Ω–∞ –Ω–∞ 3 –¥–Ω—è',
    # callback_data='weather_5_days')
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞')
    btn2 = types.KeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ 3 –¥–Ω—è')
    markup.add(btn1, btn2)
    db_user_save(message.chat.id)
    # markup.add(item, item2)
    bot.send_message(
        message.chat.id,
        (
            '–Ø –ø–æ–≥–æ–¥–Ω—ã–π –±–æ—Ç! ‚òÄÔ∏è‚õÖÔ∏èüåß‚ùÑÔ∏è\n'
            '–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ —Å–µ–≥–æ–¥–Ω—è '
            '–∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç'
        ),
        reply_markup=markup
    )


@bot.message_handler(commands=['allusers'])
def send_message_to_all_users(message: Any) -> None:
    '''–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–æ—Ç–∞.'''

    all_users = select_all_users_id()
    for i in range(len(all_users)):
        bot.send_message(
            all_users[i][0],
            (
                '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —á–µ–ª–æ–≤–µ–∫!‚úãüèº\n'
                '–ï—Å–ª–∏ —Ç–µ–±–µ –ø—Ä–∏—à–ª–æ  —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ,'
                ' —Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ —Ç—ã –∫–æ–≥–¥–∞-—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —ç—Ç–æ–≥–æ –±–æ—Ç–∞\n'
                '–£ –º–µ–Ω—è –ø–æ—è–≤–∏–ª–∏—Å—å –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏'
            )
        )


def back_to_main_menu(message: Any) -> None:
    '''–§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.'''

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞')
    btn2 = types.KeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ 3 –¥–Ω—è')
    markup.add(btn1, btn2)
    msg = bot.send_message(
        message.chat.id,
        ('–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ '
         '–≥–æ—Ä–æ–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫'),
        reply_markup=markup
    )
    bot.register_next_step_handler(msg, send_message)


def tmrrw_weather(message: Any) -> None:
    '''–ú–µ–Ω—é –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è.'''

    if message.text == '<<< –ù–∞–∑–∞–¥':
        back_to_main_menu(message)
    elif message.text == '–ü–æ–≥–æ–¥–∞ –Ω–∞ 3 –¥–Ω—è':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('<<< –ù–∞–∑–∞–¥')
        btn2 = types.KeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞')
        markup.add(btn1, btn2)
        msg = bot.send_message(
            message.chat.id,
            '–û–∫, –≤–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 3 –¥–Ω—è',
            reply_markup=markup
        )
        bot.register_next_step_handler(msg, three_days_weather)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('<<< –ù–∞–∑–∞–¥')
        btn2 = types.KeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ 3 –¥–Ω—è')
        markup.add(btn1, btn2)
        response = get_api_tomorrow(message.text, WEATHER_TOKEN)
        if response == 400:
            msg = bot.send_message(
                message.chat.id,
                '–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ',
                reply_markup=markup
            )
            bot.register_next_step_handler(msg, tmrrw_weather)
        weather = get_tomorrow_weather(response)
        msg = bot.send_message(
            message.chat.id,
            weather,
            reply_markup=markup
        )
        bot.register_next_step_handler(msg, tmrrw_weather)


def three_days_weather(message: Any) -> None:
    '''–ú–µ–Ω—é –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –Ω–∞ 3 –¥–Ω—è.'''

    if message.text == '<<< –ù–∞–∑–∞–¥':
        back_to_main_menu(message)
    elif message.text == '–ü–æ–≥–æ–¥–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('<<< –ù–∞–∑–∞–¥')
        btn2 = types.KeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ 3 –¥–Ω—è')
        markup.add(btn1, btn2)
        msg = bot.send_message(
            message.chat.id,
            '–û–∫, –≤–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ –∑–∞–≤—Ç—Ä–∞',
            reply_markup=markup
        )
        bot.register_next_step_handler(msg, tmrrw_weather)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('<<< –ù–∞–∑–∞–¥')
        btn2 = types.KeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞')
        markup.add(btn1, btn2)
        response = get_api_three_days(message.text, WEATHER_TOKEN)
        if response == 400:
            msg = bot.send_message(
                message.chat.id,
                '–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ',
                reply_markup=markup
            )
            bot.register_next_step_handler(msg, three_days_weather)
        weather = get_three_days_weather(response)
        msg = bot.send_message(
            message.chat.id,
            weather,
            reply_markup=markup
        )
        bot.register_next_step_handler(msg, three_days_weather)


@bot.message_handler(content_types='text')
def send_message(message: Any) -> None:
    '''–§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —é–∑–µ—Ä—É –ø–æ–≥–æ–¥—É –Ω–∞ —Å–µ–≥–æ–¥–Ω—è.'''

    if message.text == '–ü–æ–≥–æ–¥–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('<<< –ù–∞–∑–∞–¥')
        btn2 = types.KeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ 3 –¥–Ω—è')
        markup.add(btn1, btn2)
        msg = bot.send_message(
            message.chat.id,
            '–û–∫, –≤–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ –∑–∞–≤—Ç—Ä–∞',
            reply_markup=markup
        )
        bot.register_next_step_handler(msg, tmrrw_weather)
    elif message.text == '–ü–æ–≥–æ–¥–∞ –Ω–∞ 3 –¥–Ω—è':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('<<< –ù–∞–∑–∞–¥')
        btn2 = types.KeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ 3 –¥–Ω—è')
        markup.add(btn1, btn2)
        msg = bot.send_message(
            message.chat.id,
            '–û–∫, –≤–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 3 –¥–Ω—è',
            reply_markup=markup
        )
        bot.register_next_step_handler(msg, three_days_weather)
    else:
        response = get_api_answer(message.text, WEATHER_TOKEN)
        if response == 400:
            bot.send_message(
                message.chat.id,
                '–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑'
            )
        lon, lat = get_location(response)
        weather = get_weather(response)
        bot.send_message(message.chat.id, weather)
        bot.send_location(message.chat.id, lon, lat)
# @bot.callback_query_handler(func=lambda call:True)
# def callback(call):
#     if call.message:
#         if call.data == 'weather_tomorrow':
#             bot.send_message(call.message.chat.id, '–ø–∫hhtrh')
#         if call.data == 'weather_5_days':
#             bot.send_message(call.message.chat.id, '–ø–∫–ø—É–ø')


def main() -> None:
    '''–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è.'''

    while True:
        try:
            logging.info("Bot running..")
            bot.polling(none_stop=True, interval=2)
            break
        except telebot.apihelper.ApiException as e:
            logging.error(e)
            bot.stop_polling()
            time.sleep(15)
            logging.info("Running again!")


if __name__ == '__main__':
    main()
