from typing import Literal, Optional
import requests
from http import HTTPStatus
import logging
from calculating_funcs import temp_to_smile, calculate_right_timezone


def get_api_tomorrow(
            city: str,
            WEATHER_TOKEN: str
        ) -> dict[str, str] | Literal[400]:
    '''–î–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ URL, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç json-—Ñ–∞–π–ª.'''
    url = (
        f'https://api.openweathermap.org/data/2.5/forecast?'
        f'q={city}&appid={WEATHER_TOKEN}&units=metric&lang=ru'
    )
    response = requests.get(url)
    if response.status_code != HTTPStatus.OK:
        logging.error(f'–°–∞–π—Ç –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∫–æ–¥ –æ—Ç–≤–µ—Ç–∞ {response.status_code}')
        return 400
    try:
        response = response.json()
        logging.info(f'–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: {response}')
        return response
    except Exception as error:
        logging.error(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {error}')
        raise Exception(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {error}')


def get_tomorrow_weather(data: str) -> Optional[str]:
    '''–ü—Ä–∏–Ω–∏–º–∞–µ—Ç json-—Ñ–∞–π–ª '''
    try:
        morning = 0
        afternoon = 0
        evening = 0
        city = data['city']['name']
        timezone = data['city']['timezone']
        sunrise = data['city']['sunrise']
        sunset = data['city']['sunset']
        right_sunrise = calculate_right_timezone(timezone, sunrise)
        right_sunset = calculate_right_timezone(timezone, sunset)
        for i in range(9):
            dt_txt = data['list'][i]['dt_txt']
            if dt_txt.endswith('6:00:00'):
                morning = i
                afternoon = i + 2
                evening = i + 4

        dt_txt = data['list'][morning]['dt_txt']
        description = data['list'][morning]['weather'][0]['description']
        wind_speed = data['list'][morning]['wind']['speed']
        feels_like = data['list'][morning]['main']['feels_like']
        temp = data['list'][morning]['main']['temp']
        humidity = data['list'][morning]['main']['humidity']
        temp_smile = temp_to_smile(temp)

        dt_txt_2 = data['list'][afternoon]['dt_txt']
        description_2 = data['list'][afternoon]['weather'][0]['description']
        wind_speed_2 = data['list'][afternoon]['wind']['speed']
        feels_like_2 = data['list'][afternoon]['main']['feels_like']
        temp_2 = data['list'][afternoon]['main']['temp']
        humidity_2 = data['list'][afternoon]['main']['humidity']
        temp_smile_2 = temp_to_smile(temp_2)

        dt_txt_3 = data['list'][evening]['dt_txt']
        description_3 = data['list'][evening]['weather'][0]['description']
        wind_speed_3 = data['list'][evening]['wind']['speed']
        feels_like_3 = data['list'][evening]['main']['feels_like']
        temp_3 = data['list'][evening]['main']['temp']
        humidity_3 = data['list'][evening]['main']['humidity']
        temp_smile_3 = temp_to_smile(temp_3)

        message_date = (
                    f'–ì–æ—Ä–æ–¥: {city} üè¢\n'
                    f'–†–∞—Å—Å–≤–µ—Ç: {right_sunrise}\n'
                    f'–ó–∞–∫–∞—Ç: {right_sunset}\n\n'

                    f'–£—Ç—Ä–æ–º ‚õÖÔ∏è \n'
                    f'–î–∞—Ç–∞: {dt_txt}\n'
                    f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp} C¬∞ {temp_smile}\n'
                    f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like} C¬∞{temp_smile}\n'
                    f'–ü–æ–≥–æ–¥–∞: {description} \n–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}% üíß\n'
                    f'–í–µ—Ç–µ—Ä: {wind_speed} –º/—Å\n\n'

                    f'–î–Ω–µ–º ‚òÄÔ∏è\n'
                    f'–î–∞—Ç–∞: {dt_txt_2}\n'
                    f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_2} C¬∞ {temp_smile_2}\n'
                    f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like_2} C¬∞{temp_smile_2}\n'
                    f'–ü–æ–≥–æ–¥–∞: {description_2} \n–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity_2}% üíß\n'
                    f'–í–µ—Ç–µ—Ä: {wind_speed_2} –º/—Å\n\n'

                    f'–í–µ—á–µ—Ä–æ–º üåëüåô \n'
                    f'–î–∞—Ç–∞: {dt_txt_3}\n'
                    f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_3} C¬∞ {temp_smile_3}\n'
                    f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like_3} C¬∞{temp_smile_3}\n'
                    f'–ü–æ–≥–æ–¥–∞: {description_3} \n–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity_3}% üíß\n'
                    f'–í–µ—Ç–µ—Ä: {wind_speed_3} –º/—Å\n'
                )
        return message_date
    except Exception as error:
        logging.error(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {error}')
        print(f'–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞. –û—à–∏–±–∫–∞: {error}')
